<?php

namespace $APP_NAME$Http\Resources;

use Illuminate\Http\Resources\Json\ResourceCollection;
use Illuminate\Pagination\LengthAwarePaginator;

class RestResourceCollection extends ResourceCollection
{
    public function withResponse($request, $response)
    {
        if ($this->resource instanceof LengthAwarePaginator) {
            $baseQueryString = $request->query;
            $baseUrl = $request->url() . "?";
            foreach ($baseQueryString as $q => $value)
                if ($q !== "page")
                    $baseUrl .= $q . "=" . $value . "&";
            $currentPage = $this->resource->currentPage();
            $lastPage = $this->resource->lastPage();
            $previousPage = $this->resource->onFirstPage() ? null : ($currentPage - 1);
            $nextPage = ($currentPage < $lastPage) ? ($currentPage + 1) : null;

            $response->header('previous', empty($previousPage) ? null : ($baseUrl . "page=" . $previousPage));
            $response->header('next', empty($nextPage) ? null : ($baseUrl . "page=" . $nextPage));
            $response->header('first', ($baseUrl . "page=1"));
            $response->header('last', ($baseUrl . "page=" . $lastPage));
            $response->header('self', ($baseUrl . "page=" . $currentPage));
            $response->header('total', $this->resource->total());
        }
    }
}
