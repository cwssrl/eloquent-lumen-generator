<?php

namespace $APP_NAME$Http\Controllers\API;

use $APP_NAME$Http\Requests\Create$MODEL_NAME$Request;
use $APP_NAME$Http\Requests\Update$MODEL_NAME$Request;
use $APP_NAME$Http\Resources\$MODEL_NAME$Resource;
use $APP_NAME$Http\Resources\$MODEL_NAME$CollectionResource;
use $MODEL_FULL_CLASS$;
use $APP_NAME$Repositories\$MODEL_NAME$\$MODEL_NAME$Contract;
use Illuminate\Http\Request;
use Response;

/**
 * @package $APP_NAME$Http\Controllers\API
 */
class $MODEL_NAME$APIController extends ApiBaseController
{
    /** @var  $MODEL_NAME$Contract */
    private $$CAMEL_MODEL_NAME$Repository;

    public function __construct($MODEL_NAME$Contract $$CAMEL_MODEL_NAME$Repository)
    {
        $this->$CAMEL_MODEL_NAME$Repository = $$CAMEL_MODEL_NAME$Repository;
    }

    public function index(Request $request)
    {
        $$CAMEL_MODEL_NAME$s = $this->$CAMEL_MODEL_NAME$Repository->getByRequest($request);
        return $this->sendResponse(new $MODEL_NAME$CollectionResource($MODEL_NAME$Resource::collection($$CAMEL_MODEL_NAME$s)->resource));
    }


    public function store(Create$MODEL_NAME$Request $request)
    {
        $this->requestValidate($request);

        $input = $request->all();

        $$CAMEL_MODEL_NAME$ = $this->$CAMEL_MODEL_NAME$Repository->create($input);

        return $this->sendResponse(new $MODEL_NAME$Resource($$CAMEL_MODEL_NAME$));
    }


    public function show($id)
    {
        /** @var $MODEL_NAME$ $$CAMEL_MODEL_NAME$ */
        $$CAMEL_MODEL_NAME$ = $this->$CAMEL_MODEL_NAME$Repository->find($id);

        if (empty($$CAMEL_MODEL_NAME$)) {
            return $this->sendError('$MODEL_NAME$ not found');
        }

        return $this->sendResponse(new $MODEL_NAME$Resource($$CAMEL_MODEL_NAME$));
    }


    public function update($id, Update$MODEL_NAME$Request $request)
    {
        $this->requestValidate($request);

        $input = $request->all();

        /** @var $MODEL_NAME$ $$CAMEL_MODEL_NAME$ */
        $$CAMEL_MODEL_NAME$ = $this->$CAMEL_MODEL_NAME$Repository->find($id);

        if (empty($$CAMEL_MODEL_NAME$)) {
            return $this->sendError('$MODEL_NAME$ not found');
        }

        $$CAMEL_MODEL_NAME$ = $this->$CAMEL_MODEL_NAME$Repository->update($input, $id);

        return $this->sendResponse(new $MODEL_NAME$Resource($$CAMEL_MODEL_NAME$));
    }


    public function destroy($id)
    {
        /** @var $MODEL_NAME$ $$CAMEL_MODEL_NAME$ */
        $$CAMEL_MODEL_NAME$ = $this->$CAMEL_MODEL_NAME$Repository->find($id);

        if (empty($$CAMEL_MODEL_NAME$)) {
            return $this->sendError('$MODEL_NAME$ not found');
        }

        $$CAMEL_MODEL_NAME$->delete();

        return $this->sendResponse(["id" => $id]);
    }

}
